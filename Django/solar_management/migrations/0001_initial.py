# Generated by Django 5.1.2 on 2025-03-07 03:59

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PowerData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('input_power', models.FloatField()),
                ('usage_power', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='PowerUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt', models.DateTimeField()),
                ('global_active_power', models.FloatField()),
                ('global_reactive_power', models.FloatField()),
                ('voltage', models.FloatField()),
                ('global_intensity', models.FloatField()),
                ('sub_metering_1', models.FloatField()),
                ('sub_metering_2', models.FloatField()),
                ('sub_metering_3', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('temperature', models.FloatField(help_text='Temperature in Celsius')),
                ('cloud_cover', models.FloatField(help_text='Cloud cover (0-1 scale)')),
                ('wind_speed', models.FloatField(help_text='Wind speed in m/s')),
                ('solar_irradiance', models.FloatField(help_text='Solar irradiance in W/mÂ²')),
            ],
            options={
                'verbose_name': 'Weather Data',
                'verbose_name_plural': 'Weather Data',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UsagePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('predicted_kw', models.FloatField(help_text='Predicted energy usage in kW')),
                ('actual_kw', models.FloatField(blank=True, help_text='Actual energy usage in kW (if available)', null=True)),
                ('consumer_type', models.CharField(default='Residential', help_text='Type of consumer (Residential/Business)', max_length=50)),
                ('weather_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usage_predictions', to='solar_management.weatherdata')),
            ],
            options={
                'verbose_name': 'Usage Prediction',
                'verbose_name_plural': 'Usage Predictions',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='GenerationPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_kw', models.FloatField(help_text='Predicted solar generation in kW')),
                ('actual_kw', models.FloatField(blank=True, help_text='Actual solar generation in kW (if available)', null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('weather_data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='solar_management.weatherdata')),
            ],
            options={
                'verbose_name': 'Generation Prediction',
                'verbose_name_plural': 'Generation Predictions',
                'ordering': ['-timestamp'],
            },
        ),
    ]
